zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: 7df96b18c230490a9a0a9e2307226338
      name: Templates
  templates:
    - uuid: 1d94437d4e37499bb2c5abf47fde6c00
      template: 'Home Assistant - Zabbix'
      name: 'Home Assistant - Zabbix'
      description: |
        Home Assistant Template, created by Thomas Rzen.
        
        To ensure this template operates correctly, the URL and API key should be stored in the Macros section.
        
        If you need help, visit https://github.com/Garfieldttt/zabbix-homeassistant.
      groups:
        - name: Templates
      items:
        - uuid: 2c4ed5c0c5be4840ac89801834efae58
          name: HA-raw
          type: HTTP_AGENT
          key: ha.raw
          history: '0'
          value_type: TEXT
          trends: '0'
          url: '{$HA.URL}/api/states'
          headers:
            - name: Authorization
              value: 'Bearer {$API.TOKEN}'
          output_format: JSON
      discovery_rules:
        - uuid: d6a30debaed74aa09515805c866d8b87
          name: HA-automation
          type: DEPENDENT
          key: ha.automation
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^automation\..*'
                formulaid: A
          item_prototypes:
            - uuid: 7e37c15d52c346ed8aaf351a882e36a9
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.autot[{#ENTITY_ID}]'
              delay: '0'
              trends: 730d
              valuemap:
                name: automation
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '2'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: automations
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 041bbefc72cb4ffea38a2012e0b79cf2
          name: HA-batterie
          type: DEPENDENT
          key: ha.batt
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_battery$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_battery_level$'
                formulaid: B
          item_prototypes:
            - uuid: 175a65ef0f384596a0bc5177ea1b0458
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.bat[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: battery-level
              trigger_prototypes:
                - uuid: daaafb9fae15422e9df4375d90a3fb36
                  expression: 'last(/Home Assistant - Zabbix/ent.bat[{#ENTITY_ID}])<{$BATTERY.MINIMUM:"{#ENTITY_ID}"} and {$SWITCH.TRIGGER.BATTERY:"{#ENTITY_ID}"} = 1'
                  name: 'Battery replacement at {#FRIENDLY_NAME} is required.'
                  priority: HIGH
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: b21d364cbc23433ca3876572fb74b8bb
          name: HA-camera
          type: DEPENDENT
          key: ha.camera
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^camera\..*'
                formulaid: A
          item_prototypes:
            - uuid: a69e97081d10499ba67335c3cbd2a1e4
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.cam.stat[{#ENTITY_ID}]'
              delay: '0'
              trends: 730d
              valuemap:
                name: camera
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '0'
                - type: STR_REPLACE
                  parameters:
                    - available
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - idle
                    - '2'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: camera
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 1311148760784d948dc433324f030bc9
          name: HA-contact-sensor
          type: DEPENDENT
          key: ha.contact
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_ajto$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_contact$'
                formulaid: B
              - macro: '{#ENTITY_ID}'
                value: '.*_door$'
                formulaid: C
          item_prototypes:
            - uuid: c7d6d4e1266d4310ac88aec260d7e490
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.conbtact[{#ENTITY_ID}]'
              delay: '0'
              trends: 730d
              valuemap:
                name: contact-sensot
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: contact-sensor-status
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: d1c84360be9c40af8d42a014f504b55f
          name: HA-disk.free
          type: DEPENDENT
          key: ha.disk.free
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: ^sensor\.systemmonitor_disk_free$
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: ^sensor\.system_monitor_freier_massenspeicher$
                formulaid: B
          item_prototypes:
            - uuid: cf70957f842d4b869274cc3ab6ba6cf0
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'disk.free.mb[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!GiB'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: disk-free
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 9a41d3531a3d40d8947ea732e902e204
          name: HA-disk.used
          type: DEPENDENT
          key: ha.disk.used
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: ^sensor\.systemmonitor_disk_use$
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: ^sensor\.system_monitor_belegter_massenspeicher$
                formulaid: B
          item_prototypes:
            - uuid: 622ebc54540d4315af40dca081a22d6a
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'disk.used.mb[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!GiB'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: disk-used
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: d3bcf12e6db646b28bf746dba7607433
          name: HA-distance
          type: DEPENDENT
          key: ha.distance
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_distance$'
                formulaid: A
          item_prototypes:
            - uuid: 657c2300e6bd4e15bb87ed4461b7f637
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.meters.walked[{#ENTITY_ID}]'
              delay: '0'
              units: '!meters'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: meters-moved
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: ca8b557897294617a9335951eb401671
          name: HA-fine-dust
          type: DEPENDENT
          key: ha.fine.dust
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_pm25$'
                formulaid: A
          item_prototypes:
            - uuid: 32084b6e9438468eb986038eebbf657c
              name: 'Find dust {#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'fine.dust[{#ENTITY_ID}]'
              delay: '0'
              trends: 730d
              units: '!PM2.5'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: fine-dust
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: b63728f7e0764348b0ce33f7883e4efa
          name: HA-floors-ascended
          type: DEPENDENT
          key: ha.floors.ascended
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_ascended$'
                formulaid: A
          item_prototypes:
            - uuid: 423de2cfc16e4016acbc26754fe1f0ef
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.floors.ascended[{#ENTITY_ID}]'
              delay: '0'
              units: '!floors'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: floors-ascended
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: c700bd7346384021aa735ab743d12591
          name: HA-floors-descended
          type: DEPENDENT
          key: ha.floors.descended
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_descended$'
                formulaid: A
          item_prototypes:
            - uuid: d773f0642bdb4f4db1ef7039b13e1b76
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.floors.descended[{#ENTITY_ID}]'
              delay: '0'
              units: '!floors'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: floors-descended
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 1f4986b135ca49d3a47930d0e43c7eac
          name: HA-weather-forecast
          type: DEPENDENT
          key: ha.forecast
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*forecast_home$'
                formulaid: A
          item_prototypes:
            - uuid: df0e32186224466481e2ebe7f8e9bab4
              name: 'Weather forecast {#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.forecast[{#ENTITY_ID}]'
              delay: '0'
              trends: 730d
              description: |
                1=Clear, night: The sky is clear during the night.
                2=Cloudy: There are many clouds in the sky.
                3=Fog: There is a thick mist or fog reducing visibility.
                4=Hail: Hailstones are falling.
                5=Lightning: Lightning/thunderstorms are occurring.
                6=Lightning, rainy: Lightning/thunderstorm is occurring along with rain.
                7=Partly cloudy: The sky is partially covered with clouds.
                8=Pouring: It is raining heavily.
                9=Rainy: It is raining.
                10=Snowy: It is snowing.
                11=Snowy, rainy: It is snowing and raining at the same time.
                12=Sunny: The sky is clear and the sun is shining.
                13=Windy: It is windy.
                14=Windy, cloudy: It is windy and cloudy.
                15=Exceptional: Exceptional weather conditions are occurring.
              valuemap:
                name: weather
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - clear-night
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - cloudy
                    - '2'
                - type: STR_REPLACE
                  parameters:
                    - fog
                    - '3'
                - type: STR_REPLACE
                  parameters:
                    - hail
                    - '4'
                - type: STR_REPLACE
                  parameters:
                    - lightning
                    - '5'
                - type: STR_REPLACE
                  parameters:
                    - lightning-rainy
                    - '6'
                - type: STR_REPLACE
                  parameters:
                    - partly2
                    - '7'
                - type: STR_REPLACE
                  parameters:
                    - pouring
                    - '8'
                - type: STR_REPLACE
                  parameters:
                    - rainy
                    - '9'
                - type: STR_REPLACE
                  parameters:
                    - snowy
                    - '10'
                - type: STR_REPLACE
                  parameters:
                    - snowy-rainy
                    - '11'
                - type: STR_REPLACE
                  parameters:
                    - sunny
                    - '12'
                - type: STR_REPLACE
                  parameters:
                    - windy
                    - '13'
                - type: STR_REPLACE
                  parameters:
                    - windy-variant
                    - '14'
                - type: STR_REPLACE
                  parameters:
                    - exceptional
                    - '15'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: weather-forecast
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 9a7d25208cff4c65929f670e291a4bdc
          name: HA-Illuminance
          type: DEPENDENT
          key: ha.illu
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_illuminance$'
                formulaid: A
          item_prototypes:
            - uuid: 910c678e05454c7bb80c3e1f72d33d3a
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.illu[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!lux'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: illuminance
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: e4b9ec1c521c49789c4cf4bf1ee025ee
          name: HA-kWh
          type: DEPENDENT
          key: ha.kwh
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_energy$'
                formulaid: A
          item_prototypes:
            - uuid: 71d59c9f642d40b59e2d7a463cfb3dfb
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.kwh[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!kWh'
              valuemap:
                name: kWh
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: used-kWh
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 04a35a2a931f489694ba3d2e17bec1ce
          name: HA-light
          type: DEPENDENT
          key: ha.light
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^light\..*'
                formulaid: A
          item_prototypes:
            - uuid: 529acd31fca54758ad053f02709e2671
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.light[{#ENTITY_ID}]'
              delay: '0'
              valuemap:
                name: light
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '2'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: light
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 2459164c5d1d4a0ca13f527612377f35
          name: HA-zigbee-linkquality
          type: DEPENDENT
          key: ha.linkquality
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_linkquality$'
                formulaid: A
          item_prototypes:
            - uuid: adb345f9bd2942a2a2ca378028c15eb5
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.linkquality[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!LQI'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: zigbee-linkquality
              trigger_prototypes:
                - uuid: bcd8ff30b0ec4ac2806732d3a9209c06
                  expression: 'min(/Home Assistant - Zabbix/ent.linkquality[{#ENTITY_ID}],5m)<{$SWITCH.TRIGGER.ZIGBEE:"{#ENTITY_ID}"} or last(/Home Assistant - Zabbix/ent.linkquality[{#ENTITY_ID}]) < {$ZIGBEE.SIGNAL.MINIMUM:"{#ENTITY_ID}"} and {$SWITCH.TRIGGER.ZIGBEE:"{#ENTITY_ID}"} = 1'
                  name: 'The ZigBee connection of {#FRIENDLY_NAME}: {ITEM.LASTVALUE}'
                  priority: HIGH
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 9b9c150e83af417599542bd13274a9f6
          name: HA-humidity
          type: DEPENDENT
          key: ha.luft
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_humidity$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_moisture$'
                formulaid: B
          item_prototypes:
            - uuid: d5b546cae3cb4664b5b2675002ad5111
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.luft[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: humidity
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 7d6236e76d2a48718e3908bc68530925
          name: HA-memory-free-mb
          type: DEPENDENT
          key: ha.memory.free.mb
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_freier_arbeitsspeicher$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_memory_free$'
                formulaid: B
          item_prototypes:
            - uuid: 24a111e6fee64024975cf6658ab7722d
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'memory.free.mb[{#ENTITY_ID}]'
              delay: '0'
              units: '!MiB'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: memory-free
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: b486d9284dec47d9be84707d32a6ab3d
          name: HA-memory-use
          type: DEPENDENT
          key: ha.memory.use
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_arbeitsspeicherauslastung$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_memory_use_percent$'
                formulaid: B
          item_prototypes:
            - uuid: 1d21ec5918be47b78c6e187cc45a2055
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'memory.used.p[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: memory-utilization
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 4801eb2c43a74b8fb99edf0f1119142c
          name: HA-memory-used-mb
          type: DEPENDENT
          key: ha.memory.used.mb
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_belegter_arbeitsspeicher$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_memory_use$'
                formulaid: B
          item_prototypes:
            - uuid: a7a1f9f8215547248e65c4ab67e60dc4
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'memory.used.mb[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!MiB'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: memory-used
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 47c91bbb9cc04aaf9f952bdbd6af2c12
          name: HA-occupancy
          type: DEPENDENT
          key: ha.occupancy
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_occupancy$'
                formulaid: A
          item_prototypes:
            - uuid: 80af63d9c9514085a1eaef59042a95b6
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.occupancy[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              valuemap:
                name: occupancy
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: occupancy
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 521c20cefdc24936b1086368fe0a9ff0
          name: HA-atmospheric-pressure
          type: DEPENDENT
          key: ha.pressure
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_pressure$'
                formulaid: A
          item_prototypes:
            - uuid: dcc27475843a4422be16739172c0f982
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.pressure[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!hPa'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: atmospheric-pressure
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: c47b7577f37949e4babb2847fe768a56
          name: HA-processor-use
          type: DEPENDENT
          key: ha.processor.use
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_processor_use$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_prozessornutzung$'
                formulaid: B
          item_prototypes:
            - uuid: ad1f4237714045b48dcf52c6ae089ed7
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'cpu.utilization[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: cpu-utilization
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: f5ee07c1638b4b57a04eaf2e41e8d0fd
          name: HA-restart
          type: DEPENDENT
          key: ha.restart
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_restart$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_restart_required$'
                formulaid: B
          item_prototypes:
            - uuid: ec5c6e0e814a4104a0ecaff0d014fdc2
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.restart[{#ENTITY_ID}]'
              delay: '0'
              valuemap:
                name: 'restart required'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
                - type: STR_REPLACE
                  parameters:
                    - unknown
                    - '2'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '3'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: restart-required
              trigger_prototypes:
                - uuid: 4f0434fdb2ae45839b8077dad4211fc5
                  expression: 'last(/Home Assistant - Zabbix/ent.restart[{#ENTITY_ID}])=1 and {$SWITCH.TRIGGER.RESTART.REQUIRED:"{#ENTITY_ID}"}=1'
                  name: '{#FRIENDLY_NAME} needs a restart.'
                  priority: AVERAGE
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 1f841913ee024e52a0f0b76df12dd146
          name: HA-steps
          type: DEPENDENT
          key: ha.steps
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_steps$'
                formulaid: A
          item_prototypes:
            - uuid: abd1084ea22c4bd5a1e522c13b4662a2
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.steps[{#ENTITY_ID}]'
              delay: '0'
              units: '!steps'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: steps-taken
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: b2351deea12944c4ba9cbfd04baf8575
          name: HA-storage-available
          type: DEPENDENT
          key: ha.storage.available
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_storage$'
                formulaid: A
          item_prototypes:
            - uuid: f4f2c169eac14b8da5bce470ebc84c24
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.storage.available[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: storage-available
              trigger_prototypes:
                - uuid: a13d86cbd32c48559a9682e4dc68f872
                  expression: 'last(/Home Assistant - Zabbix/ha.storage.available[{#ENTITY_ID}])<{$STORAGE_PERCENT:"{#ENTITY_ID}"} and {$SWITCH.TRIGGER.STORAGE:"{#ENTITY_ID}"}=1'
                  name: '{#FRIENDLY_NAME} Storage available: {ITEM.LASTVALUE}'
                  priority: HIGH
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: a3661e09a4ed4b16b7fbf8828797453c
          name: HA-swap-free
          type: DEPENDENT
          key: ha.swap.free
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_freier_swap$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_swap_free$'
                formulaid: B
          item_prototypes:
            - uuid: acd79dce51e146f5bc3672917ead5959
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'swap.free[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!MiB'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: swap-free
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: df9b35ac55394021953c70c72c5861f4
          name: HA-swap-use
          type: DEPENDENT
          key: ha.swap.use
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_belegter_swap$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_swap_use$'
                formulaid: B
          item_prototypes:
            - uuid: f551aaf367f04fd8aead3f5a95e0471e
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'swap.use[{#ENTITY_ID}]'
              delay: '0'
              units: '!MiB'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: swap-used
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 83a8379722aa464ea6210156911f18b9
          name: HA-switch
          type: DEPENDENT
          key: ha.switch
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^switch\..*'
                formulaid: A
          item_prototypes:
            - uuid: 0e39d21ab2674772bc59c1ecfc674804
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.switch[{#ENTITY_ID}]'
              delay: '0'
              valuemap:
                name: switch
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '2'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: switch
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 53a32b87ee124a02a6893561d31b23da
          name: HA-temperature
          type: DEPENDENT
          key: ha.temp
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*temperature$'
                formulaid: A
          item_prototypes:
            - uuid: 3cb17f2dc8394b51b57ace27f0547c26
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.i.d[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!°C'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: LTRIM
                  parameters:
                    - '["'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: degrees-celsius
              trigger_prototypes:
                - uuid: 6f7502c07a654f1c943520fbd24c81dc
                  expression: 'last(/Home Assistant - Zabbix/ent.i.d[{#ENTITY_ID}]) > {$TRIGGER.TEMPERATURE:"{#ENTITY_ID}"} and {$SWITCH.TRIGGER.TEMPERATURE:"{#ENTITY_ID}"} = 1'
                  name: 'The temperature of {#FRIENDLY_NAME} has exceeded {$TRIGGER.TEMPERATURE}.'
                  priority: AVERAGE
                  manual_close: 'YES'
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 8922c14e83f04a738cddab0e484dfd49
          name: HA-update
          type: DEPENDENT
          key: ha.update
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_update$'
                formulaid: A
          item_prototypes:
            - uuid: f721473c84cd46eeb204fa5e2c304e8b
              name: '{#FRIENDLY_NAME}.'
              type: DEPENDENT
              key: 'ha.update[{#ENTITY_ID}]'
              delay: '0'
              trends: 730d
              valuemap:
                name: update
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: update
              trigger_prototypes:
                - uuid: 9bd597210e2a4b4b9e35ada4ab0b36fa
                  expression: 'last(/Home Assistant - Zabbix/ha.update[{#ENTITY_ID}])=1 and {$SWITCH.TRIGGER.HA_UPDATE:"{#ENTITY_ID}"} = 1 and {$SWITCH.TRIGGER.HA_UPDATE:"{#ENTITY_ID}"}'
                  name: 'Home Assistant update for {#FRIENDLY_NAME} is available.'
                  priority: HIGH
                  manual_close: 'YES'
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 72328c6a1ac745ffbd3e11758cfac97d
          name: HA-firmware-update
          type: DEPENDENT
          key: ha.update.firmware
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_firmware$'
                formulaid: A
          item_prototypes:
            - uuid: c03379cfab1046a5bbaea1bef589a383
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.firmware[{#ENTITY_ID}]'
              delay: '0'
              trends: 730d
              valuemap:
                name: firmware-update
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - 'off'
                    - '0'
                - type: STR_REPLACE
                  parameters:
                    - 'on'
                    - '1'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '2'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: firmware-update
              trigger_prototypes:
                - uuid: 2cec62c566f04555b8ccac1a128d1a1a
                  expression: 'last(/Home Assistant - Zabbix/ent.firmware[{#ENTITY_ID}])=1 and {$SWITCH.TRIGGER.FIRMWARE} = 1'
                  name: 'Firmware update for {#FRIENDLY_NAME} is available.'
                  priority: WARNING
                - uuid: b84255b67cc1466e8deff251c49d2f17
                  expression: 'last(/Home Assistant - Zabbix/ent.firmware[{#ENTITY_ID}])=2 and {$SWITCH.TRIGGER.FIRMWARE} = 1'
                  name: 'Firmware version for {#FRIENDLY_NAME} is not available'
                  priority: WARNING
                  manual_close: 'YES'
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 7319aadba90c4c839c29d11b396c6300
          name: HA-uptime
          type: DEPENDENT
          key: ha.uptime
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_uptime$'
                formulaid: A
          item_prototypes:
            - uuid: 70c7d700e9bf4a2982ad9deb0796cafb
              name: '{#FRIENDLY_NAME}.'
              type: DEPENDENT
              key: 'ha.uptime[{#ENTITY_ID}]'
              delay: '0'
              units: s
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: JAVASCRIPT
                  parameters:
                    - |
                      // ISO8601-Zeitstempel aus dem Log extrahieren
                      var regex = /^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\+\d{2}:\d{2})/;
                      var match = value.match(regex);
                      
                      if (match && match[1]) {
                          var logTime = Date.parse(match[1]); // ergibt Millisekunden
                          var now = Date.now(); // aktuelle Zeit in Millisekunden
                          if (!isNaN(logTime)) {
                              var diffSeconds = Math.floor((now - logTime) / 1000);
                              return diffSeconds;
                          }
                      }
                      
                      return 0;
                      
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: uptime
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: a0b0fff3bc1d4c269cec7f463497c718
          name: HA-VOC
          type: DEPENDENT
          key: ha.voc
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*voc_index$'
                formulaid: A
          item_prototypes:
            - uuid: 0fbd1d0659a349bb8a5fedfeeb4c403a
              name: 'Pollutants indoor air {#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.pollutants[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!VOC'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: pollutants-indoor-air
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: b20727113c364d5ba4a098b050fd5663
          name: HA-watt
          type: DEPENDENT
          key: ha.watt
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_power$'
                formulaid: A
          item_prototypes:
            - uuid: ccd1924ee7e6456fab25344d2245430c
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ent.watt[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!Watt'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - unavailable
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: Watt
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 89976aef185a473a8fea54c3adce8aaf
          name: HA-zone
          type: DEPENDENT
          key: ha.zone
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^zone\..*'
                formulaid: A
          item_prototypes:
            - uuid: 2364f352a9a74a8cae6e1c6a605c1d69
              name: 'Latitude of {#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.zone.latitude[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!LAT'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].attributes.latitude'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: zone-latitude
            - uuid: 6e813687a7884d4287bccaf85a91e1f3
              name: 'Latitude of {#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.zone.longitude[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!LON'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].attributes.longitude'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: zone-longitude
            - uuid: ef844c8505b94a8392d74b474e7622a4
              name: 'Zadius of zone {#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.zone.radius[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              trends: 730d
              units: '!m'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].attributes.radius'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: zone-radius
            - uuid: fa03ef82db2a4820a87672d748be4c5f
              name: 'People in the zone {#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'ha.zone.zone-assignment[{#ENTITY_ID}]'
              delay: '0'
              history: 730d
              value_type: TEXT
              trends: '0'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].attributes.persons'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: LTRIM
                  parameters:
                    - ' person.'
                - type: STR_REPLACE
                  parameters:
                    - '"'
                    - ' '
                - type: STR_REPLACE
                  parameters:
                    - ' person.'
                    - ' '
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: zone-assignment
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 730ad969aaf2416a907ac4595f152a48
          name: HA-swap-use-percent
          type: DEPENDENT
          key: swap.use.percent
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '.*_swap_auslastung$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '.*_swap_use_percent$'
                formulaid: B
          item_prototypes:
            - uuid: 4a2473e1efaa498bbdaa389f7b56924a
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'swap.use.percent[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '%'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: swap-utilization
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 9b5fa42242c24f609ba24d1e576b79ab
          name: HA-network.in
          type: DEPENDENT
          key: systemmonitor.network.in
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.systemmonitor_network_in_.*$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.system_monitor_eingehender_netzwerkdurchsatz_.*$'
                formulaid: B
          item_prototypes:
            - uuid: ed87cc0f281f443b8dbf6a5719327d42
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'network.in[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!MB/s'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - unknown
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: network-in
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 698f93784d9341af95de216ebd337fd0
          name: HA-network.out
          type: DEPENDENT
          key: systemmonitor.network.out
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.systemmonitor_network_out_.*$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.system_monitor_ausgehender_netzwerkdurchsatz_.*$'
                formulaid: B
          item_prototypes:
            - uuid: 2167fbf4826b4fa6ab0c1f743292398e
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'network.out[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!MB/s'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - unknown
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: network-out
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 9968149224fd4e3fbd16fe947649507e
          name: HA-network.packages.in
          type: DEPENDENT
          key: systemmonitor.network.packages.in
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.systemmonitor_network_in_packets_.*$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.system_monitor_eingehende_pakete_.*$'
                formulaid: B
          item_prototypes:
            - uuid: 2d1dff6062a14b779e557d6816fe2aae
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'network.packages.in[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!Pkts'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - unknown
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: network-packages-out
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
        - uuid: 194e8282b10e4d58be65b506fe2acad5
          name: HA-network.packages.out
          type: DEPENDENT
          key: systemmonitor.network.packages.out
          delay: '0'
          filter:
            conditions:
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.systemmonitor_network_out_packets_.*$'
                formulaid: A
              - macro: '{#ENTITY_ID}'
                value: '^sensor\.system_monitor_ausgehende_pakete_.*$'
                formulaid: B
          item_prototypes:
            - uuid: 689d11f00f854e9484765ee97495ce10
              name: '{#FRIENDLY_NAME}'
              type: DEPENDENT
              key: 'network.packages.out[{#ENTITY_ID}]'
              delay: '0'
              value_type: FLOAT
              units: '!Pkts'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.body[?(@.entity_id == "{#ENTITY_ID}")].state'
                - type: LTRIM
                  parameters:
                    - '["'
                - type: RTRIM
                  parameters:
                    - '"]'
                - type: STR_REPLACE
                  parameters:
                    - unknown
                    - '0'
              master_item:
                key: ha.raw
              tags:
                - tag: 'Home Assistant'
                  value: network-packages-in
          master_item:
            key: ha.raw
          lld_macro_paths:
            - lld_macro: '{#ENTITY_ID}'
              path: $.entity_id
            - lld_macro: '{#FRIENDLY_NAME}'
              path: $.attributes.friendly_name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.body[*]'
      macros:
        - macro: '{$API.TOKEN}'
          type: SECRET_TEXT
        - macro: '{$BATTERY.MINIMUM}'
          value: '30'
          description: 'The trigger activates when the battery drops below 30%.'
        - macro: '{$HA.URL}'
          value: 'http://192.168.10.121:8123'
          description: 'The trigger activates when the Zigbee signal drops below 90 LQI.'
        - macro: '{$STORAGE_PERCENT}'
          value: '5'
          description: 'the threshold from which the storage trigger is activated'
        - macro: '{$SWITCH.TRIGGER.BATTERY}'
          value: '1'
          description: '1 = enable 0 = disable'
        - macro: '{$SWITCH.TRIGGER.FIRMWARE}'
          value: '1'
          description: '1 = enable 0 = disable'
        - macro: '{$SWITCH.TRIGGER.HA_UPDATE}'
          value: '1'
          description: '1 = enable 0 = disable'
        - macro: '{$SWITCH.TRIGGER.RESTART.REQUIRED}'
          value: '1'
          description: '1 = enable 0 = disable'
        - macro: '{$SWITCH.TRIGGER.STORAGE}'
          value: '1'
          description: '1 = enable 0 = disable'
        - macro: '{$SWITCH.TRIGGER.TEMPERATURE}'
          value: '0'
          description: '1 = enable 0 = disable'
        - macro: '{$SWITCH.TRIGGER.ZIGBEE}'
          value: '1'
          description: '1 = enable 0 = disable'
        - macro: '{$TRIGGER.TEMPERATURE}'
          value: '44'
          description: 'The trigger activates when the temperature rises above 44 degrees Celsius, meaning it reaches 45°C.'
        - macro: '{$ZIGBEE.SIGNAL.MINIMUM}'
          value: '90'
      valuemaps:
        - uuid: fc783e73a76149cb9a5cfc5e056b20d9
          name: automation
          mappings:
            - value: '1'
              newvalue: enabled
            - value: '0'
              newvalue: disabled
            - value: '2'
              newvalue: unavailable
        - uuid: c310d795d0974bdbb5f5f4e90d84785c
          name: camera
          mappings:
            - value: '0'
              newvalue: unavailable
            - value: '1'
              newvalue: available
            - value: '2'
              newvalue: idle
        - uuid: 899dfe59db4d44e3b192354dbbdc8855
          name: contact-sensot
          mappings:
            - value: '0'
              newvalue: closed
            - value: '1'
              newvalue: open
        - uuid: 0fdd47edf8524752bb012d303c4b3cb2
          name: firmware-update
          mappings:
            - value: '0'
              newvalue: 'no update available'
            - value: '1'
              newvalue: 'an update is available'
            - value: '2'
              newvalue: 'firmware version unavailable'
        - uuid: adb641e8636d42c0a244f35207fe8f9e
          name: kWh
          mappings:
            - value: '0'
              newvalue: unavailable
        - uuid: 9259c3da5a5048de9abf8632054743aa
          name: light
          mappings:
            - value: '1'
              newvalue: 'on'
            - value: '0'
              newvalue: 'off'
            - value: '2'
              newvalue: unavailable
        - uuid: e490d69fc57440dda2ed08ce07f5040c
          name: network
          mappings:
            - value: '0'
              newvalue: unknown
        - uuid: 390fdda09d75489781371f2e56aff43f
          name: occupancy
          mappings:
            - value: '1'
              newvalue: 'on'
            - value: '0'
              newvalue: 'off'
        - uuid: 2444b31dfa28445f90ca6bb2b180ca49
          name: 'restart required'
          mappings:
            - value: '1'
              newvalue: 'restart required'
            - value: '0'
              newvalue: 'restart not required'
            - value: '2'
              newvalue: 'restart status unknown'
            - value: '3'
              newvalue: 'not reachable'
        - uuid: 0a0da62d6da74956a879957d7fb1fa7b
          name: switch
          mappings:
            - value: '1'
              newvalue: 'on'
            - value: '0'
              newvalue: 'off'
            - value: '2'
              newvalue: unavailable
        - uuid: 5435403b67724914b2991f54d0d29bb8
          name: update
          mappings:
            - value: '0'
              newvalue: 'no update available'
            - value: '1'
              newvalue: 'an update is available'
        - uuid: f3273d81438646ed8ac25ecf2e609854
          name: weather
          mappings:
            - value: '1'
              newvalue: clear-night
            - value: '2'
              newvalue: cloudy
            - value: '3'
              newvalue: fog
            - value: '4'
              newvalue: hail
            - value: '5'
              newvalue: lightning
            - value: '6'
              newvalue: lightning-rainy
            - value: '7'
              newvalue: partly2
            - value: '8'
              newvalue: pouring
            - value: '9'
              newvalue: rainy
            - value: '10'
              newvalue: snowy
            - value: '11'
              newvalue: snowy-rainy
            - value: '12'
              newvalue: sunny
            - value: '13'
              newvalue: windy
            - value: '14'
              newvalue: windy-variant
            - value: '15'
              newvalue: exception
